<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fish | Florian Oswald</title><link>https://floswald.github.io/tag/fish/</link><atom:link href="https://floswald.github.io/tag/fish/index.xml" rel="self" type="application/rss+xml"/><description>fish</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2022 Florian Oswald</copyright><lastBuildDate>Wed, 13 Sep 2023 22:54:39 +0200</lastBuildDate><image><url>https://floswald.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>fish</title><link>https://floswald.github.io/tag/fish/</link></image><item><title>Create and Rename Files with Fish</title><link>https://floswald.github.io/post/batchrename/</link><pubDate>Wed, 13 Sep 2023 22:54:39 +0200</pubDate><guid>https://floswald.github.io/post/batchrename/</guid><description>&lt;p>I am an avid user of the &lt;a href="https://fishshell.com/" target="_blank" rel="noopener">fish shell&lt;/a>. Here is a small demo of a common task I have. How to efficiently rename a long list of files in a directory?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># lets create 10 empty text files:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">floswald@PTL11077 ~/test&amp;gt; &lt;span class="k">for&lt;/span> i in &lt;span class="o">(&lt;/span>seq &lt;span class="m">1&lt;/span> 10&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> touch testfile&lt;span class="nv">$i&lt;/span>.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">floswald@PTL11077 ~/test&amp;gt; ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testfile1.txt testfile2.txt testfile4.txt testfile6.txt testfile8.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testfile10.txt testfile3.txt testfile5.txt testfile7.txt testfile9.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>no suppose I realize that &lt;code>testfile&lt;/code> is actually a poor name for this. I want to call them &lt;code>trainfile&lt;/code> instead. Here is how to change those filenames in batch instead of manually one by one. The concept is called &lt;a href="https://fishshell.com/docs/current/language.html#command-substitution" target="_blank" rel="noopener">command substition&lt;/a>, as in&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">echo (pwd)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>which evalutes first the command in the bracket before giving it to the &lt;code>echo&lt;/code> command.&lt;/p>
&lt;p>in our case, we use a &lt;code>sed&lt;/code> call to substitute parts of each filename. &lt;code>sed&lt;/code> is extremeley powerful, look here for a concise &lt;a href="https://www.grymoire.com/Unix/Sed.html" target="_blank" rel="noopener">manual&lt;/a>. In our case, we want to substitute &lt;code>test&lt;/code> with &lt;code>train&lt;/code>. The &lt;code>s&lt;/code> command in &lt;code>sed&lt;/code> does that. The syntax is &lt;code>s/old/new/&lt;/code>. So we want to substitute &lt;code>test&lt;/code> with &lt;code>train&lt;/code>. We can do that like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">floswald@PTL11077 ~/test &lt;span class="o">[&lt;/span>64&lt;span class="o">]&lt;/span>&amp;gt; &lt;span class="k">for&lt;/span> i in *.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mv &lt;span class="nv">$i&lt;/span> &lt;span class="o">(&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/test/train/g&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">floswald@PTL11077 ~/test&amp;gt; ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">trainfile1.txt trainfile2.txt trainfile4.txt trainfile6.txt trainfile8.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">trainfile10.txt trainfile3.txt trainfile5.txt trainfile7.txt trainfile9.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>